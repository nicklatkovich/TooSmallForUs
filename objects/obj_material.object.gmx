<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
dir = random(360);
pitch = random(360);
dir_spd = (random(0.5) + 0.5) * choose(1, -1);
pitch_spd = (random(0.5) + 0.5) * choose(1, -1);

angle = random(360);
angle_spd = (random(0.5) + 0.5) * choose(1, -1);

xx = undefined;
yy = undefined;

orbit = true;
xt = undefined;
yt = undefined;

Radius = obj_map.CellH * 1.5;

CreepTarget = noone;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
dir += dir_spd;
pitch += pitch_spd;
angle += angle_spd;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var xp = xx * obj_map.CellW + obj_map.CellSize * (yy % 2) + obj_map.CellSize;
var yp = yy * obj_map.CellH2 + obj_map.CellH;

if (CreepTarget == noone) {
    x = xp;
    y = yp;
} else {
    x += (CreepTarget.x - x) / 20;
    y += (CreepTarget.y - y) / 20;
}

var l = Radius * obj_map.Scale;

var cos_pitch = lengthdir_x(1, pitch);

draw_sprite_ext(spr_material, 0, (xp - obj_map.PosX) * obj_map.Scale + AppSurf.Width / 2 + lengthdir_x(l, dir) * cos_pitch, (yp - obj_map.PosY) * obj_map.Scale + AppSurf.Height / 2 + lengthdir_y(l, pitch), 1, 1, angle, c_white, 1.0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
